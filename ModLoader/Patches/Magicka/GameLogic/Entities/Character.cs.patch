@@ -9,0 +9,1 @@
+using Magicka.Extensions;
@@ -43,1 +44,1 @@
-	public abstract class Character : Entity, ISpellCaster, IStatusEffected, IDamageable
+	public abstract partial class Character : Entity, ISpellCaster, IStatusEffected, IDamageable
@@ -7049,1 +7050,1 @@
-		public void GetSpellRangeModifier(ref float iRange)
+		public void GetSpellRangeModifier(ref float range)
@@ -7051,2 +7052,7 @@
+			for (int i = 0; i < _globals.Count; i++)
+				if (!_globals[i].PreGetSpellRangeModifier(ref range))
+					return;
+
-			float num = 1f;
+			float multiplier = 1f;
-			float num2 = 0f;
+			float modifier = 0f;
+
@@ -7057,2 +7063,2 @@
-					num *= mBuff.BuffModifySpellRange.RangeMultiplier;
+					multiplier *= mBuff.BuffModifySpellRange.RangeMultiplier;
-					num2 += mBuff.BuffModifySpellRange.RangeModifier;
+					modifier += mBuff.BuffModifySpellRange.RangeModifier;
@@ -7061,2 +7067,5 @@
-			iRange *= num;
-			iRange += num2;
+
+			range *= multiplier;
+			range += modifier;
+
+			for (int i = 0; i < _globals.Count; i++) _globals[i].GetSpellRangeModifier(ref range);
@@ -7065,1 +7074,1 @@
-		public float GetAgroMultiplier()
+		public float GetAggroMultiplier()
@@ -7067,1 +7076,5 @@
-			float num = 1f;
+			var multiplier = 1f;
+
+			for (int i = 0; i < _globals.Count; i++)
+				if (!_globals[i].PreGetAggroMultiplier(ref multiplier)) return multiplier;
+
@@ -7072,1 +7085,1 @@
-					num *= mBuff.BuffReduceAgro.Amount;
+					multiplier *= mBuff.BuffReduceAggro.Amount;
@@ -7075,1 +7088,4 @@
+
+			for (int i = 0; i < _globals.Count; i++) _globals[i].GetAggroMultiplier(ref multiplier);
+
-			return num;
+			return multiplier;
@@ -7173,0 +7189,3 @@
+			for (int i = 0; i < _globals.Count; i++)
+				if (_globals[i].PreDamage(ref iDamage, ref iElement)) return;
+
@@ -7177,0 +7196,1 @@
+
@@ -7178,0 +7198,1 @@
+
@@ -7182,0 +7203,1 @@
+
@@ -7186,2 +7208,4 @@
+
-			float num = mHitPoints;
+			float currentHP = mHitPoints;
-			float num2 = mHitPoints - iDamage;
+			float remainingHP = mHitPoints - iDamage;
+
@@ -7192,0 +7216,1 @@
+
@@ -7193,1 +7218,1 @@
-			if (num2 <= 0f && num > 0f)
+			if (remainingHP <= 0f && currentHP > 0f)
@@ -7210,0 +7235,1 @@
+
@@ -7214,0 +7240,1 @@
+
@@ -7218,0 +7245,1 @@
+
@@ -7227,1 +7255,1 @@
-				if (num2 < mMaxHitPoints)
+				if (remainingHP < mMaxHitPoints)
@@ -7238,1 +7266,1 @@
-				if (num2 > mMaxHitPoints)
+				if (remainingHP > mMaxHitPoints)
@@ -7247,0 +7275,2 @@
+
+			for (int i = 0; i < _globals.Count; i++) _globals[i].Damage(ref iDamage, ref iElement);
